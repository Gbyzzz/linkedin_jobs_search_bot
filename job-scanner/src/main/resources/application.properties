spring.application.name=job-scanner
application.kafka.topic=to_search
server.port=8082


spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=jobs_db
#spring.data.mongodb.username=user
#spring.data.mongodb.password=pass
spring.data.mongodb.authentication-database=admin

spring.kafka.security.protocol=SSL
spring.kafka.bootstrap-servers=localhost:9093
spring.kafka.ssl.trust-store-location=classpath:/client-certs/kafka.client.truststore.jks
spring.kafka.ssl.trust-store-password=aa132435aa
spring.kafka.ssl.key-store-location=classpath:/client-certs/kafka.client.keystore.jks
spring.kafka.ssl.key-store-password=aa132435aa
spring.kafka.ssl.key-password=aa132435aa
spring.kafka.ssl.endpoint.identification.algorithm

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=searchParamsTimeRangeDTO:com.gbyzzz.jobscanner.dto.SearchParamsTimeRangeDTO

spring.kafka.consumer.group-id=demo-group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=searchParamsTimeRangeDTO:com.gbyzzz.jobscanner.dto.SearchParamsTimeRangeDTO

application.kafka.topic.to_check_if_new=to_check_if_new
application.kafka.topic.to_search=to_search


bot.cookie=${BOT_COOKIE_ONE}
bot.csrf.token=${BOT_CSRF_TOKEN_ONE}
bot.username=
bot.password=