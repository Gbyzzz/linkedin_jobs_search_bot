version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,SSL://localhost:9093
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SSL_CLIENT_AUTH: "required"
      KAFKA_SSL_KEYSTORE_FILENAME: 'certs/kafka.server.keystore.jks'
      KAFKA_SSL_KEYSTORE_CREDENTIALS: 'certs/keystore_credentials'
      KAFKA_SSL_KEY_CREDENTIALS: 'certs/key_credentials'
      KAFKA_SSL_TRUSTSTORE_FILENAME: 'certs/kafka.server.truststore.jks'
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: 'certs/truststore_credentials'
    volumes:
      - ./certs/:/etc/kafka/secrets/certs

#version: "3.9"
#services:
#  zookeeper:
#    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "22181:2181"
#
#  kafka:
#    image: confluentinc/cp-kafka:latest
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - 9092:9092
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#
#  bot_postgres:
#    container_name: bot_postgres
#    image: postgres:16.3
#    ports:
#      - "5433:5432"
#    restart: always
#    env_file:
#      - .env
#    depends_on:
#      - "zookeeper"
#      - "kafka"
#    environment:
#      POSTGRES_PASSWORD: ${PASSWORD}
#      POSTGRES_DB: linkedin_jobs_bot
#  #    volumes:
#  #      - postgres-data:/var/lib/postgresql/data
#
#  bot_redis:
#    container_name: bot_redis
#    image: redis:latest
#    env_file:
#      - .env
#    ports:
#      - "7917:6379" # Port 7917 on host mapped to 6379 inside container (standard Redis port)
#    environment:
#      REDIS_PASSWORD: ${PASSWORD}
#    restart: always
#
#  bot_mongodb:
#    container_name: bot_mongodb
#    image: mongodb/mongodb-community-server:latest
#    command: mongod --port 27018
#    env_file:
#      - .env
#    ports:
#      - "27018:27018"
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${USERNAME}
#      MONGO_INITDB_ROOT_PASSWORD: ${PASSWORD}
#    restart: always
#
#  bot_main:
#    build: ./linkedin-jobs-bot-main
#    restart: always
#    env_file:
#      - .env
#    container_name: bot_main
#    depends_on:
#      - "bot_postgres"
#      - "bot_redis"
#      - "bot_mongodb"
#      - "zookeeper"
#      - "kafka"
#    ports:
#      - "8888:8080"
#    working_dir: /app
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://bot_postgres:5432/linkedin_jobs_bot
#      - SPRING_DATASOURCE_PASSWORD=${PASSWORD}
#      - SPRING_DATA_MONGODB_HOST=bot_mongodb
#      - SPRING_DATA_MONGODB_PORT=27018
#      - SPRING_DATA_MONGODB_DATABASE=jobs_db
#      - SPRING_DATA_MONGODB_PASSWORD=${PASSWORD}
#      - SPRING_DATA_MONGODB_USERNAME=${USERNAME}
#      - SPRING_DATA_REDIS_HOST=bot_redis
#      - SPRING_DATA_REDIS_PASSWORD=${PASSWORD}
#      - BOT_NAME=${BOT_NAME}
#      - BOT_TOKEN=${BOT_TOKEN}
#      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9093
#      - SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL=SASL_PLAINTEXT
#      - SPRING_KAFKA_PROPERTIES_SASL_MECHANISM=PLAIN
#      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_ADMIN_USERNAME}" password="${KAFKA_ADMIN_PASSWORD}";
#
#  bot_scanner_one:
#    build: ./job-scanner
#    restart: always
#    env_file:
#      - .env
#    container_name: bot_scanner_one
#    depends_on:
#      - "bot_postgres"
#      - "bot_redis"
#      - "bot_mongodb"
#      - "zookeeper"
#      - "kafka"
#      - "bot_main"
#    ports:
#      - "8881:8080"
#    working_dir: /app
#    environment:
#      - SPRING_DATA_MONGODB_HOST=bot_mongodb
#      - SPRING_DATA_MONGODB_PORT=27018
#      - SPRING_DATA_MONGODB_DATABASE=jobs_db
#      - SPRING_DATA_MONGODB_PASSWORD=${PASSWORD}
#      - SPRING_DATA_MONGODB_USERNAME=${USERNAME}
#      - BOT_USERNAME=${BOT_USERNAME_ONE}
#      - BOT_PASSWORD=${BOT_PASSWORD_ONE}
#      - BOT_COOKIE=${BOT_COOKIE_ONE}
#      - BOT_CSRF_TOKEN=${BOT_CSRF_TOKEN_ONE}
#      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9093
#      - SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL=SASL_PLAINTEXT
#      - SPRING_KAFKA_PROPERTIES_SASL_MECHANISM=PLAIN
#      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_ADMIN_USERNAME}" password="${KAFKA_ADMIN_PASSWORD}";
#
#  bot_scanner_two:
#    build: ./job-scanner
#    restart: always
#    env_file:
#      - .env
#    container_name: bot_scanner_two
#    depends_on:
#      - "bot_postgres"
#      - "bot_redis"
#      - "bot_mongodb"
#      - "zookeeper"
#      - "kafka"
#      - "bot_main"
#    ports:
#      - "8882:8080"
#    working_dir: /app
#    environment:
#      - SPRING_DATA_MONGODB_HOST=bot_mongodb
#      - SPRING_DATA_MONGODB_PORT=27018
#      - SPRING_DATA_MONGODB_DATABASE=jobs_db
#      - SPRING_DATA_MONGODB_PASSWORD=${PASSWORD}
#      - SPRING_DATA_MONGODB_USERNAME=${USERNAME}
#      - BOT_USERNAME=${BOT_USERNAME_TWO}
#      - BOT_PASSWORD=${BOT_PASSWORD_TWO}
#      - BOT_COOKIE=${BOT_COOKIE_TWO}
#      - BOT_CSRF_TOKEN=${BOT_CSRF_TOKEN_TWO}
#      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9093
#      - SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL=SASL_PLAINTEXT
#      - SPRING_KAFKA_PROPERTIES_SASL_MECHANISM=PLAIN
#      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_ADMIN_USERNAME}" password="${KAFKA_ADMIN_PASSWORD}";