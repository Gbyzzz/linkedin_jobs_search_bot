name: linkedin_jobs_bot
services:
  bot_main:
    build:
      context: .
      dockerfile: ./linkedin-jobs-bot-main/Dockerfile
    restart: always
    networks:
      - app_network
    ports:
      - "8090:8090"
    container_name: bot_main
    working_dir: /app
    environment:
      - SERVER_PORT=8090
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/linkedin_jobs_bot
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=jobs_db
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_PASSWORD=${PASSWORD}
      - SPRING_DATA_MONGODB_USERNAME=${USER}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PASSWORD=${PASSWORD}
      - BOT_NAME=${BOT_NAME}
      - BOT_TOKEN=${BOT_TOKEN}
      - SPRING_KAFKA_BOOTSTRAPSERVERS=kafka:9093
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="${PASSWORD}";
      - TIME_PERIOD=14400
      - SCAN_PERIOD=2


  bot_api:
    build:
      context: .
      dockerfile: ./linkedin-jobs-bot-api/Dockerfile
    restart: always
    container_name: bot_api
    networks:
      - app_network
    ports:
      - "8091:8091"
    working_dir: /app
    environment:
      - SERVER_PORT=8091
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/linkedin_jobs_bot
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=jobs_db
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_PASSWORD=${PASSWORD}
      - SPRING_DATA_MONGODB_USERNAME=${USER}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PASSWORD=${PASSWORD}
      - BOT_NAME=${BOT_NAME}
      - BOT_TOKEN=${BOT_TOKEN}
      - SPRING_KAFKA_BOOTSTRAPSERVERS=kafka:9093
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="${PASSWORD}";



  bot_frontend:
    build:
      context: ./linkedin-frontend
      args:
        - ENV=${ENV}
    container_name: linkedin-frontend
    restart: always
    networks:
      - app_network
    ports:
      - "3002:3002"

  bot_scanner_one:
    build:
      context: .
      dockerfile: ./job-scanner/Dockerfile
    restart: always
    container_name: bot_scanner_one
    networks:
      - app_network
    depends_on:
      - bot_main
    working_dir: /app
    ports:
      - "8092:8092"
    environment:
      - SERVER_PORT=8092
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_DATABASE=jobs_db
      - SPRING_DATA_MONGODB_PASSWORD=${PASSWORD}
      - SPRING_DATA_MONGODB_USERNAME=${USER}
      - BOT_USERNAME=${BOT_USERNAME_ONE}
      - BOT_PASSWORD=${BOT_PASSWORD_ONE}
      - BOT_COOKIE=${BOT_COOKIE_ONE}
      - BOT_CSRF_TOKEN=${BOT_CSRF_TOKEN_ONE}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9093
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="${PASSWORD}";

  #      - SPRING_KAFKA_SSL_TRUST_STORE_LOCATION=file:/app/build/resources/main/client-certs/kafka.consumer.truststore.jks
  #      - SPRING_KAFKA_SSL_TRUST_STORE_PASSWORD=${PASSWORD}
  #      - SPRING_KAFKA_SSL_KEY_STORE_LOCATION=file:/app/build/resources/main/client-certs/kafka.consumer.keystore.jks
  #      - SPRING_KAFKA_SSL_KEY_STORE_PASSWORD=${PASSWORD}
  #      - SPRING_KAFKA_SSL_KEY_PASSWORD=${PASSWORD}

  #      - SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL=SASL_PLAINTEXT
  #      - SPRING_KAFKA_PROPERTIES_SASL_MECHANISM=PLAIN
  #      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_ADMIN_USERNAME}" password="${KAFKA_ADMIN_PASSWORD}";

  bot_scanner_two:
    build:
      context: .
      dockerfile: ./job-scanner/Dockerfile
    restart: always
    container_name: bot_scanner_two
    depends_on:
      - bot_main
    networks:
      - app_network
    working_dir: /app
    environment:
      - SERVER_PORT=8093
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_DATABASE=jobs_db
      - SPRING_DATA_MONGODB_PASSWORD=${PASSWORD}
      - SPRING_DATA_MONGODB_USERNAME=${USER}
      - BOT_USERNAME=${BOT_USERNAME_TWO}
      - BOT_PASSWORD=${BOT_PASSWORD_TWO}
      - BOT_COOKIE=${BOT_COOKIE_TWO}
      - BOT_CSRF_TOKEN=${BOT_CSRF_TOKEN_TWO}
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9093
      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="${PASSWORD}";


#      - SPRING_KAFKA_SSL_TRUST_STORE_LOCATION=file:/app/build/resources/main/client-certs/kafka.consumer.truststore.jks
#      - SPRING_KAFKA_SSL_TRUST_STORE_PASSWORD=${PASSWORD}
#      - SPRING_KAFKA_SSL_KEY_STORE_LOCATION=file:/app/build/resources/main/client-certs/kafka.consumer.keystore.jks
#      - SPRING_KAFKA_SSL_KEY_STORE_PASSWORD=${PASSWORD}
#      - SPRING_KAFKA_SSL_KEY_PASSWORD=${PASSWORD}
#
#      - SPRING_KAFKA_PROPERTIES_SECURITY_PROTOCOL=SASL_PLAINTEXT
#      - SPRING_KAFKA_PROPERTIES_SASL_MECHANISM=PLAIN
#      - SPRING_KAFKA_PROPERTIES_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required username="${KAFKA_ADMIN_USERNAME}" password="${KAFKA_ADMIN_PASSWORD}";


networks:
  app_network:
    external: true