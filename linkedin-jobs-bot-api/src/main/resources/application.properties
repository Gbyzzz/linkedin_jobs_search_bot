spring.application.name=linkedin-jobs-bot-api

server.port=8091

server.servlet.context-path=/api/v3

spring.datasource.url=jdbc:postgresql://localhost:5432/linkedin_jobs_bot
spring.datasource.username=postgres
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#logging.level.org.hibernate.stat=DEBUG
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate.type=TRACE
#logging.level.org.hibernate.orm.jdbc.bind=TRACE

spring.kafka.security.protocol=SASL_PLAINTEXT
spring.kafka.bootstrap-servers=127.0.0.1:29093
spring.kafka.jaas.enabled=true
spring.kafka.properties.sasl.mechanism=PLAIN
#spring.kafka.ssl.trust-store-location=classpath:/client-certs/kafka.linked-in-main.truststore.jks
#spring.kafka.ssl.trust-store-password=aa132435aa
#spring.kafka.ssl.key-store-location=classpath:/client-certs/kafka.linked-in-main.keystore.jks
#spring.kafka.ssl.key-store-password=aa132435aa
#spring.kafka.ssl.key-password=aa132435aa
#spring.kafka.ssl.endpoint.identification.algorithm
spring.kafka.streams.replication-factor=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=searchParamsTimeRangeDTO:com.gbyzzz.linkedinjobsbot.modules.dto.dto.SearchParamsTimeRangeDTO

spring.kafka.consumer.group-id=demo-group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.type.mapping=searchParamsTimeRangeDTO:com.gbyzzz.linkedinjobsbot.modules.dto.dto.SearchParamsTimeRangeDTO

application.kafka.topic.to_check_if_new=to_check_if_new
application.kafka.topic.to_search=to_search

spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=jobs_db
spring.data.mongodb.authentication-database=admin
spring.data.mongodb.username=
spring.data.mongodb.password=

gbyzzz.app.jwt=
gbyzzz.app.jwt.expiration=
bot.name=
bot.token=
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.prometheus.enabled=true

app.allowed_origins=https://linkedin-bot.gbyzzz.com,http://localhost:80